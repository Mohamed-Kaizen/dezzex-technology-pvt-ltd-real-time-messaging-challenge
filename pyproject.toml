[tool.poetry]
name = "dezzex_technology_pvt_ltd_real_time_messaging_challenge"
version = "0.1.0"
description = "This is a project provide it by Dezzex Technology Pvt Ltd to build real-time messaging app"
authors = ["Mohamed Nesredin <mohamednesredin19@hotmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "example.com"
documentation = ""
repository = "https://github.com/Mohamed-Kaizen/dezzex-technology-pvt-ltd-real-time-messaging-challenge/"

[tool.poetry.dependencies]
python = "^3.11"
confusable_homoglyphs = "^3.2.0"
dj-database-url = "^2.0.0"
django = "^4.2"
django-axes = "^6.0"
gunicorn = "^20.1"
Pillow = "^9.5"
python-decouple = "^3.8"
pwned-passwords-django = "^2.0"
whitenoise = {extras = ["brotli"], version = "^6.4.0"}
argon2-cffi = "^21.3.0"
django-ninja = "^0.22.1"
django-cors-headers = "^4.0.0"
django-ninja-jwt = "^5.2.5"
email-validator = "^2.0.0.post2"
psycopg = {extras = ["binary", "pool"], version = "^3.1.9"}
channels = {extras = ["daphne"], version = "^4.0.0"}


[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
coverage = {extras = ["toml"], version = "^7.2.7"}
django-coverage-plugin = "^3.0.0"
django-debug-toolbar = "^4.1.0"
isort = "^5.12.0"
mypy = "^1.3.0"
ruff = "^0.0.270"
pytest = "^7.3.1"
pytest-cov = "^4.1.0"
pytest-django = "^4.5.2"
safety = "^2.3.5"
xdoctest = "^1.1.1"
mkdocs-material = "^9.1.15"
mkdocstrings = "^0.22.0"
mkdocs-minify-plugin = "^0.6.4"
mkdocs-git-revision-date-localized-plugin = "^1.2.0"
mkdocs-git-authors-plugin = "^0.7.1"
pytest-asyncio = "^0.21.0"

[tool.coverage.run]
branch = true
source = ["dezzex_technology_pvt_ltd_real_time_messaging_challenge"]
plugins = [
    'django_coverage_plugin',
]

[tool.coverage.report]
show_missing = true

[tool.isort]
profile="black"

[tool.ruff]
select = [
    "E",   # pycodestyle
    "F",   # pyflakes
    "UP",  # pyupgrade
    "D",   # pydocstyle
    "B",   # bugbear
    "W",   # pycodestyle
    "I",   # isort
    "N",   # pep8-naming
    "ANN", # flake8-annotations
    "C90", # mccabe
    "ASYNC", # async checker
    "S",     # bandit
    "BLE",   # flake8-blind-except
    "FBT",   # flake8-boolean-trap
    "A",     # flake8-builtins
    "COM",   # flake8-commas
    "C4",   # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "T10",  # flake8-debugger
    "EM",   # flake8-errmsg
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "G",    # flake8-logging-format
    "PIE",  # flake8-pie
    "T20", # flake8-print
    "PT",   # flake8-pytest-style
    "Q0",   # flake8-quotes
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "INT",  # flake8-gettext
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "ERA",  # flake8-eradicate
    "PL",   # Pylint
    "PLC",  # Pylint-Convention
    "PLE",  # Pylint-Error
    "PLR",  # Pylint-Refactor
    "PLW",  # Pylint-Warn
    "TRY",  # tryceratops
    "FLY",  # flynt
    "RUF",  # ruffus
    "TCH"
]
show-fixes = true
line-length = 88
ignore = ["S101"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[tool.pytest.ini_options]
minversion = "6.0"
DJANGO_SETTINGS_MODULE="dezzex_technology_pvt_ltd_real_time_messaging_challenge.settings"
python_files = ["test_*.py", "*_test.py", "testing/python/*.py"]
addopts = "--cov"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
